services:
  mongo:
    # Use mongodb community server image. UBI (Universal Base Image) is a minimal base image that is based on Red Hat Universal Base Image (UBI).
    image: mongodb/mongodb-community-server:6.0-ubi8
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=liel-almog
      - MONGODB_INITDB_ROOT_PASSWORD=password123
    networks:
      - app-tier
    hostname: mongodb
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-server:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "29092:29092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    hostname: kafka
    networks:
      - app-tier
    healthcheck:
      test: [ "CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-ui:
    image: docker.io/provectuslabs/kafka-ui:latest
    ports:
      - "8000:8080"
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
    networks:
      - app-tier
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - 8080:80
    depends_on:
      kafka-server:
        condition: service_healthy
      mongo:
        condition: service_healthy

    environment:
      - KAFKA_BROKERS=["kafka:9092"]
      - CONNECTION_STRING=mongodb://liel-almog:password123@mongodb:27017
    networks:
      - app-tier

  vip-consumer:
    build:
      context: vip-consumer
      dockerfile: Dockerfile
    depends_on:
      kafka-server:
        condition: service_healthy
      mongo:
        condition: service_healthy
    environment:
      - KAFKA_BROKERS=["kafka:9092"]
      - CONNECTION_STRING=mongodb://liel-almog:password123@mongodb:27017
    networks:
      - app-tier

volumes:
  mongo-data:
    driver: local
  kafka_data:
    driver: local

networks:
  app-tier:
    driver: bridge
